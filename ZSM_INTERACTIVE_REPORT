*&---------------------------------------------------------------------*
*& Report ZSM_INTERACTIVE_REPORT
*&---------------------------------------------------------------------*
*&
*&---------------------------------------------------------------------*
REPORT zsm_interactive_report.

TABLES: vbrk, vbrp.

TYPES: BEGIN OF ts_vbrk,
         vbeln TYPE vbrk-vbeln,
         fkart TYPE vbrk-fkart,
         fktyp TYPE vbrk-fktyp,
         vbtyp TYPE vbrk-vbtyp,
         waerk TYPE vbrk-waerk,
         vkorg TYPE vbrk-vkorg,
         vtweg TYPE vbrk-vtweg,
         kalsm TYPE vbrk-kalsm,
         knumv TYPE vbrk-knumv,
         vsbed TYPE vbrk-vsbed,
         fkdat TYPE vbrk-fkdat,
         belnr TYPE vbrk-belnr,
       END OF ts_vbrk.

TYPES: BEGIN OF ts_vbrp,
         vbeln TYPE vbrp-vbeln,
         posnr TYPE vbrp-posnr,
         meins TYPE vbrp-meins,
         netwr TYPE vbrp-netwr,
         matnr TYPE vbrp-matnr,
         matkl TYPE vbrp-matkl,
       END OF ts_vbrp.

DATA: it_vbrk TYPE TABLE OF ts_vbrk,
      it_vbrp TYPE TABLE OF ts_vbrp,
      it_list TYPE slis_t_listheader,
      wa_list LIKE LINE OF it_list.

DATA: it_fieldcat TYPE slis_t_fieldcat_alv,
      wa_fieldcat TYPE slis_fieldcat_alv.

SELECT-OPTIONS: s_vbeln FOR vbrk-vbeln.

START-OF-SELECTION.

  PERFORM fetch_data USING s_vbeln[] CHANGING it_vbrk.
  PERFORM display TABLES it_vbrk.

*&---------------------------------------------------------------------*
*&      Form  FETCH_DATA
*&---------------------------------------------------------------------*
FORM fetch_data USING p_s_vbeln LIKE s_vbeln[]
                 CHANGING p_it_vbrk LIKE it_vbrk.

  SELECT vbeln
         fkart
         fktyp
         vbtyp
         waerk
         vkorg
         vtweg
         kalsm
         knumv
         vsbed
         fkdat
         belnr
         FROM vbrk INTO TABLE p_it_vbrk
         WHERE vbeln IN p_s_vbeln.

ENDFORM.                    " FETCH_DATA

*&---------------------------------------------------------------------*
*&      Form  DISPLAY
*&---------------------------------------------------------------------*
FORM display TABLES p_it_vbrk LIKE it_vbrk.

  " Add field catalog creation
  PERFORM create_fieldcat USING 'TS_VBRK'.

  CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY'
    EXPORTING
      i_callback_program       = sy-repid
      i_callback_pf_status_set = 'PF_STATUS'
      i_callback_user_command  = 'USER_COMMAND'
      i_callback_top_of_page   = 'TOP_PAGE'
      i_structure_name         = 'TS_VBRK'
      it_fieldcat              = it_fieldcat  " Pass the field catalog here
    TABLES
      t_outtab                 = p_it_vbrk
    EXCEPTIONS
      program_error            = 1
      OTHERS                   = 2.

  IF sy-subrc <> 0.
    " Implement suitable error handling here
  ENDIF.

ENDFORM.                    " DISPLAY

*&---------------------------------------------------------------------*
*&      Form  CREATE_FIELDCAT
*&---------------------------------------------------------------------*
FORM create_fieldcat USING iv_structure TYPE string.

  CLEAR wa_fieldcat.
  wa_fieldcat-fieldname = 'VBELN'.
  wa_fieldcat-seltext_l = 'Sales Order'.
  wa_fieldcat-outputlen  = 10.
  wa_fieldcat-col_pos  = 1.
  APPEND wa_fieldcat TO it_fieldcat.

  CLEAR wa_fieldcat.
  wa_fieldcat-fieldname = 'FKART'.
  wa_fieldcat-seltext_l = 'Billing Type'.
  wa_fieldcat-outputlen  = 8.
  wa_fieldcat-col_pos  = 2.
  APPEND wa_fieldcat TO it_fieldcat.

  CLEAR wa_fieldcat.
  wa_fieldcat-fieldname = 'FKTYP'.
  wa_fieldcat-seltext_l = 'Billing Type Group'.
  wa_fieldcat-outputlen  = 8.
  wa_fieldcat-col_pos  = 3.
  APPEND wa_fieldcat TO it_fieldcat.

  CLEAR wa_fieldcat.
  wa_fieldcat-fieldname = 'VBTYP'.
  wa_fieldcat-seltext_l = 'Sales Document Type'.
  wa_fieldcat-outputlen  = 8.
  wa_fieldcat-col_pos  = 4.
  APPEND wa_fieldcat TO it_fieldcat.

  CLEAR wa_fieldcat.
  wa_fieldcat-fieldname = 'WAERK'.
  wa_fieldcat-seltext_l = 'Currency'.
  wa_fieldcat-outputlen  = 5.
  wa_fieldcat-col_pos  = 5.
  APPEND wa_fieldcat TO it_fieldcat.

  CLEAR wa_fieldcat.
  wa_fieldcat-fieldname = 'VKORG'.
  wa_fieldcat-seltext_l = 'Sales Organization'.
  wa_fieldcat-outputlen  = 5.
  wa_fieldcat-col_pos  = 6.
  APPEND wa_fieldcat TO it_fieldcat.

  CLEAR wa_fieldcat.
  wa_fieldcat-fieldname = 'VTWEG'.
  wa_fieldcat-seltext_l = 'Distribution Channel'.
  wa_fieldcat-outputlen  = 8.
  wa_fieldcat-col_pos  = 7.
  APPEND wa_fieldcat TO it_fieldcat.

  CLEAR wa_fieldcat.
  wa_fieldcat-fieldname = 'KALSM'.
  wa_fieldcat-seltext_l = 'Sales Group'.
  wa_fieldcat-outputlen  = 8.
  wa_fieldcat-col_pos  = 8.
  APPEND wa_fieldcat TO it_fieldcat.

  CLEAR wa_fieldcat.
  wa_fieldcat-fieldname = 'KNUMV'.
  wa_fieldcat-seltext_l = 'Condition Number'.
  wa_fieldcat-outputlen  = 10.
  wa_fieldcat-col_pos  = 9.
  APPEND wa_fieldcat TO it_fieldcat.

  CLEAR wa_fieldcat.
  wa_fieldcat-fieldname = 'VSBED'.
  wa_fieldcat-seltext_l = 'Shipping Conditions'.
  wa_fieldcat-outputlen  = 6.
  wa_fieldcat-col_pos  = 10.
  APPEND wa_fieldcat TO it_fieldcat.

  CLEAR wa_fieldcat.
  wa_fieldcat-fieldname = 'FKDAT'.
  wa_fieldcat-seltext_l = 'Billing Date'.
  wa_fieldcat-outputlen  = 10.
  wa_fieldcat-col_pos  = 11.
  APPEND wa_fieldcat TO it_fieldcat.

  CLEAR wa_fieldcat.
  wa_fieldcat-fieldname = 'BELNR'.
  wa_fieldcat-seltext_l = 'Document Number'.
  wa_fieldcat-outputlen  = 10.
  wa_fieldcat-col_pos  = 12.
  APPEND wa_fieldcat TO it_fieldcat.

  CLEAR wa_fieldcat.

ENDFORM.                    " CREATE_FIELDCAT

*&---------------------------------------------------------------------*
*&      Form  PF_STATUS
*&---------------------------------------------------------------------*
FORM pf_status USING rt_extab TYPE slis_t_extab.
  SET PF-STATUS 'ZMYSCREEN'. " Ensure this status is created and assigned to the ALV output
ENDFORM.

*&---------------------------------------------------------------------*
*&      Form  USER_COMMAND
*&---------------------------------------------------------------------*
FORM user_command USING sy_ucomm
                        rs_selfield TYPE slis_selfield.

  CASE sy_ucomm.

    WHEN '&EML'.

      " Step 1: Prepare the text format data
      TYPES: BEGIN OF lty_data,
               data(100),
             END OF lty_data.
      DATA: lt_data         TYPE TABLE OF lty_data,
            wa_data         TYPE lty_data,
            lt_binary_data  TYPE solix_tab,
            lo_bcs          TYPE REF TO cl_bcs,
            lo_sapuser      TYPE REF TO cl_sapuser_bcs,
            lo_external_uer TYPE REF TO cl_cam_address_bcs,
            lv_line(20)     TYPE n,
            lv_subject      TYPE so_obj_des,
            lt_text         TYPE soli_tab,
            wa_text         TYPE soli,
            lo_document     TYPE REF TO cl_document_bcs,
            lv_attachment_subject TYPE so_obj_des,
            lv_result TYPE boolean.

      SELECT vbeln
                   posnr
                   meins
                   netwr
                   matnr
                   matkl
                   FROM vbrp INTO TABLE it_vbrp
                   WHERE vbeln IN s_vbeln.

      CONCATENATE 'Sales Document' 'Billing Item' 'NET AMT' 'UOM' 'MATNR' 'M-Group' INTO wa_data-data SEPARATED BY '|'.
      APPEND wa_data TO lt_data.
      CLEAR: wa_data.

      LOOP AT it_vbrp INTO DATA(wa_vbrp).

        DATA lv_amout TYPE c.
        lv_amout = wa_vbrp-netwr.

        CONCATENATE wa_vbrp-vbeln wa_vbrp-posnr wa_vbrp-meins lv_amout wa_vbrp-matnr wa_vbrp-matkl INTO wa_data-data SEPARATED BY '|'.
        APPEND wa_data TO lt_data.

      ENDLOOP.

      " Step 2:  Convert Text format data to Binary Format
      CALL FUNCTION 'SCMS_TEXT_TO_BINARY'
        TABLES
          text_tab   = lt_data
          binary_tab = lt_binary_data
        EXCEPTIONS
          failed     = 1
          OTHERS     = 2.
      IF sy-subrc <> 0.
* Implement suitable error handling here
      ENDIF.

      " Step 3: Create send request
      TRY.
          CALL METHOD cl_bcs=>create_persistent
            RECEIVING
              result = lo_bcs.
          .
        CATCH cx_send_req_bcs.
      ENDTRY.

      " Step 4: Create Recipent
      TRY.
          CALL METHOD cl_sapuser_bcs=>create
            EXPORTING
              i_user = 'BEST'
            RECEIVING
              result = lo_sapuser.
        CATCH cx_address_bcs.
      ENDTRY.

      TRY.
          CALL METHOD lo_bcs->add_recipient
            EXPORTING
              i_recipient = lo_sapuser
*             i_express   =
*             i_copy      =
*             i_blind_copy =
*             i_no_forward =
            .
        CATCH cx_send_req_bcs.
      ENDTRY.

""""""""""""""""""""""""""""""""""""""@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@2
      TRY.
          CALL METHOD cl_cam_address_bcs=>create_internet_address
            EXPORTING
              i_address_string = 'moreswati119@gmail.com'
*             i_address_name   =
*             i_incl_sapuser   =
            RECEIVING
              result           = lo_external_uer.
        CATCH cx_address_bcs.
      ENDTRY.


      TRY.
          CALL METHOD lo_bcs->add_recipient
            EXPORTING
              i_recipient = lo_external_uer
*             i_express   =
*             i_copy      =
*             i_blind_copy =
*             i_no_forward =
            .
        CATCH cx_send_req_bcs.
      ENDTRY.

      DESCRIBE TABLE it_vbrp LINES lv_line.
      CONCATENATE 'No of Sales Order' : lv_line INTO lv_subject.

      wa_text-line = 'Dear Sir'.
      APPEND wa_text TO lt_text.
      CLEAR wa_text.

      wa_text-line = 'Below is attached document'.
      APPEND wa_text TO lt_text.
      CLEAR wa_text.



      TRY.
          CALL METHOD cl_document_bcs=>create_document
            EXPORTING
              i_type    = 'RAW'
              i_subject = lv_subject
*             i_length  =
*             i_language      = SPACE
*             i_importance    =
*             i_sensitivity   =
              i_text    = lt_text
*             i_hex     =
*             i_header  =
*             i_sender  =
*             iv_vsi_profile  =
*             iv_vsi_scan_off =
            RECEIVING
              result    = lo_document.
        CATCH cx_document_bcs.
      ENDTRY.

CONCATENATE 'Sales Order' sy-datum INTO lv_attachment_subject.

TRY.
CALL METHOD lo_document->add_attachment
  EXPORTING
    i_attachment_type     = 'XLS'
    i_attachment_subject  = lv_attachment_subject
*    i_attachment_size     =
*    i_attachment_language = SPACE
*    i_att_content_text    =
    i_att_content_hex     = lt_binary_data
*    i_attachment_header   =
*    iv_vsi_profile        =
*    iv_vsi_scan_off       =
*    i_attachment_filename =
    .
  CATCH cx_document_bcs.
ENDTRY.

* Set the doc
TRY.
CALL METHOD lo_bcs->set_document
  EXPORTING
    i_document = lo_document
    .
  CATCH cx_send_req_bcs.
ENDTRY.

* Send Immendiate
TRY.
CALL METHOD lo_bcs->set_send_immediately
  EXPORTING
    i_send_immediately = 'X'
    .
  CATCH cx_send_req_bcs.
ENDTRY.

* Send check email
TRY.
CALL METHOD lo_bcs->send
*  EXPORTING
*    i_with_error_screen = SPACE
  RECEIVING
    result              = lv_result
    .
  CATCH cx_send_req_bcs.
ENDTRY.

** Commit

IF lv_result is NOT INITIAL.
commit WORK.
ENDIF.





************************************************************************************************
    WHEN '&IC1'.
      DATA: num(10) TYPE n.
      num = rs_selfield-value.

      SELECT vbeln
             posnr
             meins
             netwr
             matnr
             matkl
             FROM vbrp INTO TABLE it_vbrp
             WHERE vbeln = num.

      CLEAR it_fieldcat. " # Clear the field catalog before reusing
      PERFORM create_fieldcat1 USING 'TS_VBRP'. " Add field catalog for VBRP

      CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY'
        EXPORTING
          i_callback_program = sy-repid
          i_structure_name   = 'TS_VBRP'
          it_fieldcat        = it_fieldcat
        TABLES
          t_outtab           = it_vbrp
        EXCEPTIONS
          program_error      = 1
          OTHERS             = 2.

      IF sy-subrc <> 0.
        " Implement suitable error handling here
      ENDIF.
  ENDCASE.

ENDFORM.

*&---------------------------------------------------------------------*
*&      Form  TOP_PAGE
*&---------------------------------------------------------------------*
FORM top_page.

  wa_list-typ = 'H'.
  wa_list-info = 'SALES ORDER REPORT'.
  APPEND wa_list TO it_list.
  CLEAR wa_list.

  wa_list-typ = 'S'.
  CONCATENATE sy-datum+6(2) ':' sy-datum+4(2) ':' sy-datum(4)
  INTO wa_list-info.
  APPEND wa_list TO it_list.
  CLEAR wa_list.

  CALL FUNCTION 'REUSE_ALV_COMMENTARY_WRITE'
    EXPORTING
      it_list_commentary = it_list
      i_logo             = 'MYLOGO'.

  CLEAR it_list.
ENDFORM.
*&---------------------------------------------------------------------*
*& Form create_fieldcat1
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*&      --> P_
*&---------------------------------------------------------------------*
FORM create_fieldcat1  USING iv_structure TYPE string.

  CLEAR wa_fieldcat.
  wa_fieldcat-fieldname = 'VBELN'.
  wa_fieldcat-seltext_l = 'Sales Document'.
  wa_fieldcat-outputlen  = 20.
*  wa_fieldcat-col_pos  = 12.
  APPEND wa_fieldcat TO it_fieldcat.

  CLEAR wa_fieldcat.
  wa_fieldcat-fieldname = 'POSNR'.
  wa_fieldcat-seltext_l = 'Billing Item'.
  wa_fieldcat-outputlen  = 15.
*  wa_fieldcat-col_pos  = 12.
  APPEND wa_fieldcat TO it_fieldcat.

  CLEAR wa_fieldcat.
  wa_fieldcat-fieldname = 'MEINS'.
  wa_fieldcat-seltext_l = 'Base Unit of Measure'.
  wa_fieldcat-outputlen  = 15.
*  wa_fieldcat-col_pos  = 12.
  APPEND wa_fieldcat TO it_fieldcat.

  CLEAR wa_fieldcat.
  wa_fieldcat-fieldname = 'NETWR'.
  wa_fieldcat-seltext_l = 'Net Value'.
  wa_fieldcat-outputlen  = 15.
*  wa_fieldcat-col_pos  = 12.
  APPEND wa_fieldcat TO it_fieldcat.

  CLEAR wa_fieldcat.
  wa_fieldcat-fieldname = 'MATNR'.
  wa_fieldcat-seltext_l = 'Material No'.
  wa_fieldcat-outputlen  = 18.
*  wa_fieldcat-col_pos  = 12.
  APPEND wa_fieldcat TO it_fieldcat.

  CLEAR wa_fieldcat.
  wa_fieldcat-fieldname = 'MATKL'.
  wa_fieldcat-seltext_l = 'Material Group'.
  wa_fieldcat-outputlen  = 15.
*  wa_fieldcat-col_pos  = 12.
  APPEND wa_fieldcat TO it_fieldcat.

ENDFORM.
